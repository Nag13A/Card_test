{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar backslashRegex = exports.backslashRegex = /\\\\/g;\nvar newlineRegex = exports.newlineRegex = /\\r?\\n/g;\nvar commaRegex = exports.commaRegex = /,/g;\nvar semicolonRegex = exports.semicolonRegex = /;/g;\nvar doublequoteRegex = exports.doublequoteRegex = /\"/g;\nvar encodeText = exports.encodeText = function encodeText(text) {\n  return text ? text.replace(backslashRegex, '\\\\\\\\').replace(newlineRegex, '\\\\n').replace(commaRegex, '\\\\,').replace(semicolonRegex, '\\\\;') : '';\n};\nvar encodeTextList = exports.encodeTextList = function encodeTextList(text) {\n  var delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';\n  if (!text || !text.length) {\n    return '';\n  }\n  if (typeof text === 'string') {\n    return encodeText(text);\n  }\n  // array\n  return text.map(encodeText).join(delimiter);\n};\nvar encodeQuotedText = exports.encodeQuotedText = function encodeQuotedText(text) {\n  return text.replace(newlineRegex, '\\\\n').replace(doublequoteRegex, '\\\\\"');\n};\nvar formatPref = exports.formatPref = function formatPref(pref) {\n  return pref > 0 ? ';PREF=' + pref : '';\n};\nvar formatTypeValue = exports.formatTypeValue = function formatTypeValue(type) {\n  if (!type || !type.length) {\n    return '';\n  }\n  if (typeof type === 'string') {\n    return encodeText(type);\n  }\n  // array\n  return '\"' + type.map(encodeText).join(',') + '\"';\n};\nvar formatType = exports.formatType = function formatType(type) {\n  var value = formatTypeValue(type);\n  return value && ';TYPE=' + value;\n};\nvar padZero = function padZero(n) {\n  return '' + (n < 10 ? '0' : '') + n;\n};\nvar formatDate = exports.formatDate = function formatDate(year, month, day) {\n  // 19850412\n  // 1985-04\n  // 1985\n  // --0412\n  // ---12\n  if (year) {\n    if (month) {\n      if (day) {\n        return '' + year + padZero(month) + padZero(day);\n      } else {\n        return year + '-' + padZero(month);\n      }\n    } else {\n      if (day) {\n        // invalid\n        return '';\n      } else {\n        return '' + year;\n      }\n    }\n  } else {\n    if (month) {\n      if (day) {\n        return '--' + padZero(month) + padZero(day);\n      } else {\n        // invalid\n        return '';\n      }\n    } else {\n      if (day) {\n        return '---' + padZero(day);\n      } else {\n        // invalid\n        return '';\n      }\n    }\n  }\n};\nvar formatGender = exports.formatGender = function formatGender(gender) {\n  switch (gender.toUpperCase()) {\n    case 'M':\n    case 'MALE':\n      return 'M';\n    case 'F':\n    case 'FEMALE':\n      return 'F';\n    case 'O':\n    case 'OTHER':\n      return 'O';\n    case 'N':\n    case 'NONE':\n      return 'N';\n    case 'U':\n    case 'UNKNOWN':\n      return 'U';\n    default:\n      return 'O;' + encodeText(gender);\n  }\n};\nvar isSet = exports.isSet = function isSet(x) {\n  return x;\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","backslashRegex","newlineRegex","commaRegex","semicolonRegex","doublequoteRegex","encodeText","text","replace","encodeTextList","delimiter","arguments","length","undefined","map","join","encodeQuotedText","formatPref","pref","formatTypeValue","type","formatType","padZero","n","formatDate","year","month","day","formatGender","gender","toUpperCase","isSet","x"],"sources":["C:/Users/lolok/Desktop/Работы/RebuildTest/node_modules/vcard-generator/lib/util.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar backslashRegex = exports.backslashRegex = /\\\\/g;\nvar newlineRegex = exports.newlineRegex = /\\r?\\n/g;\nvar commaRegex = exports.commaRegex = /,/g;\nvar semicolonRegex = exports.semicolonRegex = /;/g;\nvar doublequoteRegex = exports.doublequoteRegex = /\"/g;\n\nvar encodeText = exports.encodeText = function encodeText(text) {\n  return text ? text.replace(backslashRegex, '\\\\\\\\').replace(newlineRegex, '\\\\n').replace(commaRegex, '\\\\,').replace(semicolonRegex, '\\\\;') : '';\n};\n\nvar encodeTextList = exports.encodeTextList = function encodeTextList(text) {\n  var delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';\n\n  if (!text || !text.length) {\n    return '';\n  }\n  if (typeof text === 'string') {\n    return encodeText(text);\n  }\n  // array\n  return text.map(encodeText).join(delimiter);\n};\n\nvar encodeQuotedText = exports.encodeQuotedText = function encodeQuotedText(text) {\n  return text.replace(newlineRegex, '\\\\n').replace(doublequoteRegex, '\\\\\"');\n};\n\nvar formatPref = exports.formatPref = function formatPref(pref) {\n  return pref > 0 ? ';PREF=' + pref : '';\n};\n\nvar formatTypeValue = exports.formatTypeValue = function formatTypeValue(type) {\n  if (!type || !type.length) {\n    return '';\n  }\n  if (typeof type === 'string') {\n    return encodeText(type);\n  }\n  // array\n  return '\"' + type.map(encodeText).join(',') + '\"';\n};\n\nvar formatType = exports.formatType = function formatType(type) {\n  var value = formatTypeValue(type);\n  return value && ';TYPE=' + value;\n};\n\nvar padZero = function padZero(n) {\n  return '' + (n < 10 ? '0' : '') + n;\n};\n\nvar formatDate = exports.formatDate = function formatDate(year, month, day) {\n  // 19850412\n  // 1985-04\n  // 1985\n  // --0412\n  // ---12\n  if (year) {\n    if (month) {\n      if (day) {\n        return '' + year + padZero(month) + padZero(day);\n      } else {\n        return year + '-' + padZero(month);\n      }\n    } else {\n      if (day) {\n        // invalid\n        return '';\n      } else {\n        return '' + year;\n      }\n    }\n  } else {\n    if (month) {\n      if (day) {\n        return '--' + padZero(month) + padZero(day);\n      } else {\n        // invalid\n        return '';\n      }\n    } else {\n      if (day) {\n        return '---' + padZero(day);\n      } else {\n        // invalid\n        return '';\n      }\n    }\n  }\n};\n\nvar formatGender = exports.formatGender = function formatGender(gender) {\n  switch (gender.toUpperCase()) {\n    case 'M':\n    case 'MALE':\n      return 'M';\n    case 'F':\n    case 'FEMALE':\n      return 'F';\n    case 'O':\n    case 'OTHER':\n      return 'O';\n    case 'N':\n    case 'NONE':\n      return 'N';\n    case 'U':\n    case 'UNKNOWN':\n      return 'U';\n    default:\n      return 'O;' + encodeText(gender);\n  }\n};\n\nvar isSet = exports.isSet = function isSet(x) {\n  return x;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}